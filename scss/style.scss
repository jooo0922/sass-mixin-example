// clear 믹스인 만들기
@mixin clear {
  // 이 믹스인을 @include 해주면, 해당 믹스인이 include된 스타일시트가 꾸며주는 element가 &로 들어가겠지!
  // 이거를 넣어주면 clear가 붙어서 하위 요소들의 float 속성이 clear 됨.
  &::after {
    content: "";
    display: block;
    clear: both;
  }
}

// 말줄임표 믹스인 만들기 (width값으로 지정할 값을 매개변수로 받고 있음.)
@mixin ellipsis($w) {
  overflow: hidden;
  display: block;
  width: $w;
  text-overflow: ellipsis; // 요소의 영역을 벗어나는 text들에 대해서 말줄임표로 생략처리 하는 기능
  white-space: nowrap; // 요소가 공백 문자를 처리하는 방법 지정. nowrap으로 하면 연속 공백을 하나로 합쳐줌. -> 한줄로 합쳐놓은 효과
}

// 두 줄 이상 텍스트 말줄임표 믹스인 만들기
@mixin ellipsis2($line, $w, $h) {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $line; // 위에 두 줄의 속성을 지정해줘야 line-clamp가 실행됨. -> 얘는 요소의 텍스트를 몇번째 행에서 끊을건지 결정함.
  width: $w; // 가로 사이즈는 각 행이 얼마만큼 가서 끊길지를 정해줌.
  height: $h; // 높이 사이즈는 얼마만큼 짤릴 지를 정의해 줌.
  text-overflow: ellipsis;
}

.a {
  @include ellipsis(150px);
}

.b {
  @include ellipsis2(3, 150px, 66px);
}

/*
css에서 팝업 요소를 포지셔닝 하려면 아래와 같이 여러 개의 속성값들을 매번 달아줘야 했음.
이제 이것을 sass의 mixin 기능을 이용해서 재사용성있게 처리할 것임.

div {
  position: absolute;
  width: 300px;
  height: 300px;
  border: 1px solid red;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}
*/

// 이 믹스인은 가로 사이즈를 몇으로 넣어주느냐에 따라 해당 팝업요소를 알아서 가운데로 배치시켜 줌.
// 이렇게 믹스인을 만들어두면, 나중에 똑같은 코드를 계속 반복해서 치지 않아도 됨. -> 재사용성 증가!
@mixin box_center($w) {
  position: absolute;
  left: 50%;
  top: 50%;
  width: $w;
  // 팝업 요소의 높이는 자식의 크기요소에 맞춰서 지정되도록 하면 되니까 매개변수를 따로 안넣어도 됨.
  transform: translate(-50%, -50%);
}

div {
  @include box_center(500px);
  height: 200px; // 높이값을 따로 지정해줄 필요가 있다고 생각되면 여기서 지정해줘도 됨.
  border: 1px solid red;
}
